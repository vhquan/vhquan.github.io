#+TITLE: Memory Addressing
#+AUTHOR: Quan Vu
#+EMAIL: vuhongquanbk97@gmail.com
#+OPTIONS: ':t toc:t author:t email:t
#+LANGUAGE: en

#+begin_abstract
The memory of a computer system consists of tiny electronics switches, with each switch in one of two states: open or closed. It is, however, more convenient to think of these states as 0 and 1, rather than open and closed. Thus, each switch can represent a bit. The memory unit consists of millions of such bits. In order to make memory more manageable, eight bits are grouped into a byte. Memory can then be viewed as consisting of an ordered sequence of bytes. Each byte in this memory is identified by its sequence number starting with 0.
#+end_abstract

* Memory chip
It is possible to visualize a typical internal main memory structure as consisting of rows and columns of basic cells. Each cell is capable of storing one bit of information. 

* 16-Byte Ordering
Storing data often requires more than a byte. For example, we need four bytes of memory to store an integer variable that can take a value between 0 and 2^32 - 1. 
Suppose that we want to store these 4-byte data in memory at locations 100 through 103. How do we store them? 