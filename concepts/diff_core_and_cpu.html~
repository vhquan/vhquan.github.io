<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2023-09-11 Mon 22:01 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Differences between core and CPU</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Quan Vu" />
<link rel="stylesheet" href="https://vhquan.github.io/css/style.css" type="text/css"/>
</head>
<body>
<div id="org-div-home-and-up">
 <a accesskey="h" href=""> UP </a>
 |
 <a accesskey="H" href="/"> HOME </a>
</div><div id="content">
<h1 class="title">Differences between core and CPU</h1>
<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org82906da">1. Introduction</a></li>
<li><a href="#org04d893b">2. The context of Processing Units</a></li>
<li><a href="#orgdb2fc58">3. Processing core</a></li>
<li><a href="#orgb9ab6f6">4. Central Processing Unit</a></li>
<li><a href="#orgd879d1f">5. Systematic Summary</a></li>
<li><a href="#org1f458f1">6. Conclusion</a></li>
</ul>
</div>
</div>

<div id="outline-container-org82906da" class="outline-2">
<h2 id="org82906da"><span class="section-number-2">1</span> Introduction</h2>
<div class="outline-text-2" id="text-1">
<p>
When we host a big party, we typically have several tasks to
accomplish. Besides actually doing the work in the party location, we also
have to organize all the work, talk with suppliers for food, drinks, and
decoration, and deal with the guest list.
</p>

<p>
Hosting a big party involves a lot of work. So, it would be nice having many
people working on it. But, of course, we still need the figure of the party
host to make decisions and manage the other people working. But, with multiple
people, it's possible to divide all the required tasks and do them in
parallel.
</p>

<p>
Hosting a party is an analogy to how a modern computer CPU works. The CPU is
our party host. It deals with several requests and messages and divides the
processing work among the available cores. The cores, in turn, are the people
working at the party. They listen to the host (CPU) instructions and execute
the required tasks.
</p>

<p>
<b>With this example, we can already note that cores and CPUs are not synonyms.</b>
</p>

<p>
Thus, in this tutorial, we'll study the main differences and similarities
between them. Initially, we'll have a brief historical context of processing
units. So, we'll investigate the concepts of cores and CPU. Finally, we'll
compare them in a systematic summary.
</p>


<div class="figure">
<p><img src="../images/comp_arch.png" alt="comp_arch.png" />
</p>
</div>

<p>
The high-level definitions of these parts are as follows:
</p>
<ul class="org-ul">
<li>The central processing unit (CPU) is the part of the computer that is built
to be obsessed with "what is next?" If you computer is rated at 3.0
Gigahertz, it means that the CPU will ask "What next?" three billion times
per second. You are going to have to learn how to talk fast to keep up with
the CPU.</li>
<li>The main memory is used to store information that the CPU needs in a
hurry. The main memory is nearly as fast as the CPU. But the information
stored in the main memory vanishes when the computer is turned off.</li>
<li>The secondary memory is also used to store information, but it is much
slower than the main memory. The advantage of the secondary memory is that
it can store information even when there is no power to the
computer. Examples of secondary memory are disk drives of flash memory
(typically found in USB sticks and portable music players).</li>
<li>The Input and Output devices are simply our screen, keyboard, mouse and
microphone, speaker, touchpad, etc. They are all of the ways we interact
with the computer.</li>
<li>These days, most computers also have a Network Connection to retrieve
information over a network. We can think of the network as a very slow place
to store and retrieve data that might not always be "up". So in a sense, the
network is a slower and at times unreliable form of Secondary Memory.</li>
</ul>

<p>
While most of the detail of how these components work is best left to computer
builders, it helps to have some terminology so we can talk about these
different paths as we write our programs.
</p>

<p>
As a programmer, your job is to use and orchestrate each of these resources to
solve the problem that you need to solve and analyze the data you get from the
solution. As a programmer you will mostly be "talking" to the CPU and telling
it what to do next. Sometimes you will tell the CPU to use the main memory,
secondary memory, network, or the input/output devices.
</p>

<p>
You need to be the person who answers the CPU's "What next?" question. But it
would be very uncomfortable to shrink you down to 5mm tall and insert you into
the computer just so you could issue a command three billion times per
second. So instead, you must write down your instructions in advance. We call
these stored instructions a program and the act of writing these instructions
down and getting the instructions to be correct programming.
</p>
</div>
</div>

<div id="outline-container-org04d893b" class="outline-2">
<h2 id="org04d893b"><span class="section-number-2">2</span> The context of Processing Units</h2>
<div class="outline-text-2" id="text-2">
<p>
Early computer systems, before the 70s, used limited processing units due to
the complex integration of transistors and logical gates on a large scale in a
single chip. Thus, CPUs required connected chips to work together to process a
single task. 
</p>

<p>
After, in the 70s, the Large-Scale Integration (LSI) enabled the creation of
microprocessors with data processing and control logic in the same chip. LSI
allowed the coexistence of tens of thousands of transistors and up to ten
thousand logical ports in the same chip for the same CPU.
</p>

<p>
The number of transistors and logical ports in the same chip kept increasing
in the following decades. So, in the early 2000s, it becomes viable to have
multiple processing cores working together in the same die. It means, in
practice, a CPU working with several processing cores and executing parallel
tasks. 
</p>

<p>
After that, other technologies, such as multithreading, make the parallelism
in the CPUs even better. However, in the following sections, we'll focus con
multicore and understand the relationship between a CPU and its processing
cores.
</p>
</div>
</div>

<div id="outline-container-orgdb2fc58" class="outline-2">
<h2 id="orgdb2fc58"><span class="section-number-2">3</span> Processing core</h2>
<div class="outline-text-2" id="text-3">
<p>
<b>A core is a processing unit of the CPU</b>. It is responsible for executing
 programs and multiple other actions on a computer.
</p>

<p>
In general, we can divide a core into three main parts: control unit,
arithmetic-logic unit, and memory. Each part of the core is responsible for
particular tasks:
</p>

<ul class="org-ul">
<li><b>Control Unit (CU)</b>: This unit enables the communication of the core with
other components of a computer system. So, for example, it requires
instructions processing, sends signals for the computer system hardware, and
manages the computer system data. In this way, the control unit communicates
with both the arithmetic-logic unit and the memory.</li>
<li><b>Arithmetic-Logic Unit (ALU)</b>: This unit consists of electronic circuits that
execute arithmetic and logical operations. Usually, the ALU executes four
arithmetic operations - addition, substraction, multiplication, and
division. Furthermore, it typically executes three logical operations -
equal-to, less-than, and greater-than.</li>
<li><b>Memory</b>: The memory built within the core consists of registers and
cache. Registers are portions of memory used to. For example, keep
addresses, instructions, and results of calculations for the core
processing. Cache, in turn, is a high-speed random access memory that holds
data that the core probably will (re)use.</li>
</ul>

<p>
Other relevant particular elements of a core are the clock and the buses. The
following image shows an abstract core architecture:
</p>


<div class="figure">
<p><img src="../images/alu.png" alt="alu.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-orgb9ab6f6" class="outline-2">
<h2 id="orgb9ab6f6"><span class="section-number-2">4</span> Central Processing Unit</h2>
<div class="outline-text-2" id="text-4">
<p>
<b>The CPU consists of the component that coordinates cores for executing tasks
 in a computer system.</b> In this way, a computer with a single CPU can
 simultanenously execute <code>n</code> tasks, where <code>n</code> is the number of cores. As a note, <code>n</code>
 is the total number of available threads if the CPU cores employ
 multithreading.
</p>

<p>
In addition to hosting and coordinating the processing cores, the CPU
establishes the communication between other components of a computer system
and processing cores (through their control unit). To do that, a CPU generally
has controllers for memory accessing and data I/O.
</p>

<p>
The CPU commonly contains an extra level of cache shared within all the
processing cores (typically a layer two or a layer three cache). Furthermore,
it is possible to integrate a GPU into the CPU. Actually, the CPU can host
multiple different components, benefiting them by being close to the
processing cores. 
</p>

<p>
In this way, it is relevant to highlight that CPUs vary according to the
adopted design. Early CPUs, for example, have many of their controllers
implemented in a complementary chipset. Most of modern CPUs, however, have all
the controllers implemented inside them.
</p>

<p>
The following image shows an abstract CPU design:
</p>


<div class="figure">
<p><img src="../images/cpu.png" alt="cpu.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-orgd879d1f" class="outline-2">
<h2 id="orgd879d1f"><span class="section-number-2">5</span> Systematic Summary</h2>
<div class="outline-text-2" id="text-5">
<p>
<b>We studied the concepts of processing core and CPU</b>. Both concepts are related
 to the execution of tasks in a computer system. However, they aren't
 synonyms.
</p>

<p>
A CPU is component of computer systems that manages and executes tasks. Thus,
controllers, cache memory, and most important, processing cores compose a CPU.
</p>

<p>
Processing cores, as previously stated, are part of the CPU. They actually
process tasks on a computer. Typically, they have some standard elements. The
most prominent of them are CU, ALU and memory.
</p>

<p>
The following table compares and summarizes information of processing cores
and CPUs:
</p>


<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-left" />

<col  class="org-left" />

<col  class="org-left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">&#xa0;</th>
<th scope="col" class="org-left"><b>Central Processing Unit (CPU)</b></th>
<th scope="col" class="org-left"><b>Processing Core</b></th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left"><b>What is it?</b></td>
<td class="org-left">Processing component</td>
<td class="org-left">The processing</td>
</tr>

<tr>
<td class="org-left">&#xa0;</td>
<td class="org-left">of a computer system</td>
<td class="org-left">element of a CPU</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left"><b>How many?</b></td>
<td class="org-left">One (Uniprocessor)</td>
<td class="org-left">One (single-core)</td>
</tr>

<tr>
<td class="org-left">&#xa0;</td>
<td class="org-left">Multiple (Multiprocessor)</td>
<td class="org-left">Multiple (Multicore)</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left"><b>What are the</b></td>
<td class="org-left">Controllers; Cache;</td>
<td class="org-left">CU; ALU; Memory</td>
</tr>

<tr>
<td class="org-left"><b>main elements?</b></td>
<td class="org-left">Processing Cores</td>
<td class="org-left">(Cache and Registers)</td>
</tr>
</tbody>
</table>
</div>
</div>

<div id="outline-container-org1f458f1" class="outline-2">
<h2 id="org1f458f1"><span class="section-number-2">6</span> Conclusion</h2>
<div class="outline-text-2" id="text-6">
<p>
<b>In this article, we learned about the differences between a processing core
 and a CPU</b>. First, we had a brief review of the evolution of processing
 units. So, we studied the concept of a processing core, thus understanding
 their main elements. Similarly, we analyzed the concept and main elements of
 a CPU. Finally, we had a summary on processing cores and CPU and compared
 their relations and differences.
</p>

<p>
We can conclude that, in fact, processing cores and CPUs are not the same
things. While cores actually process tasks, a CPU responsible for controlling
the cores, as well as interfacing data from other computer system components
to them. So, a processing core works within the CPU, and one depends on
another to accomplish the computer tasks. 
</p>
</div>
</div>
</div>
</body>
</html>
